# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TestQuery(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, query: str=None, lang: str=None):  # noqa: E501
        """TestQuery - a model defined in Swagger

        :param query: The query of this TestQuery.  # noqa: E501
        :type query: str
        :param lang: The lang of this TestQuery.  # noqa: E501
        :type lang: str
        """
        self.swagger_types = {
            'query': str,
            'lang': str
        }

        self.attribute_map = {
            'query': 'query',
            'lang': 'lang'
        }
        self._query = query
        self._lang = lang

    @classmethod
    def from_dict(cls, dikt) -> 'TestQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TestQuery of this TestQuery.  # noqa: E501
        :rtype: TestQuery
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self) -> str:
        """Gets the query of this TestQuery.


        :return: The query of this TestQuery.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query: str):
        """Sets the query of this TestQuery.


        :param query: The query of this TestQuery.
        :type query: str
        """
        if query is None:
            raise ValueError("Invalid value for `query`, must not be `None`")  # noqa: E501

        self._query = query

    @property
    def lang(self) -> str:
        """Gets the lang of this TestQuery.


        :return: The lang of this TestQuery.
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang: str):
        """Sets the lang of this TestQuery.


        :param lang: The lang of this TestQuery.
        :type lang: str
        """
        if lang is None:
            raise ValueError("Invalid value for `lang`, must not be `None`")  # noqa: E501

        self._lang = lang
