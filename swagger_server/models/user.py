# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, passwd: str=None):  # noqa: E501
        """User - a model defined in Swagger

        :param id: The id of this User.  # noqa: E501
        :type id: str
        :param passwd: The passwd of this User.  # noqa: E501
        :type passwd: str
        """
        self.swagger_types = {
            'id': str,
            'passwd': str
        }

        self.attribute_map = {
            'id': 'id',
            'passwd': 'passwd'
        }
        self._id = id
        self._passwd = passwd

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def passwd(self) -> str:
        """Gets the passwd of this User.


        :return: The passwd of this User.
        :rtype: str
        """
        return self._passwd

    @passwd.setter
    def passwd(self, passwd: str):
        """Sets the passwd of this User.


        :param passwd: The passwd of this User.
        :type passwd: str
        """
        if passwd is None:
            raise ValueError("Invalid value for `passwd`, must not be `None`")  # noqa: E501

        self._passwd = passwd
