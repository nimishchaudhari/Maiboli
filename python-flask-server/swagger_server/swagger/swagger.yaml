---
swagger: "2.0"
info:
  description: "This is a simple User API by GROUP 3."
  version: "0.1.9"
  title: "Custormer API"
tags:
- name: "User"
  description: "Operations about Users"
paths:
  /User:
    post:
      tags:
      - "User"
      summary: "Create User"
      operationId: "create_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "id/pass"
        description: "To create a new user"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "201":
          description: "Successful created"
        "409":
          description: "User already exists"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
    get:
      tags:
      - "User"
      summary: "Get Users"
      description: "Get all Users from the DB "
      operationId: "get_all_users"
      produces:
      #- "application/xml"
      - "application/json"
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /User/{Username}:
    put:
      tags:
      - "UserModi"
      summary: "Modify user"
      description: "To modify a a username/Password "
      operationId: "modify_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "Username"
        in: "path"
        description: "Enter username "
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Enter user name, password, option (1 for updating username,\
          \ 2 for password), modification"
        required: true
        schema:
          $ref: "#/definitions/UserModi"
      responses:
        "200":
          description: "updated successfully"
        "204":
          description: "No content "
        "404":
          description: "UserName not found "
      x-swagger-router-controller: "swagger_server.controllers.user_modi_controller"
    delete:
      tags:
      - "User"
      summary: "Delete user"
      description: "To delete a user entry"
      operationId: "delete_user"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "Username"
        in: "path"
        description: "The username of the user that needs to be deleted"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Password needed to delete a user"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Deleted sucessfully"
        "404":
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
    
definitions:
  User:
    type: "object"
    required:
      - "Username"
      - "Password"
    properties:
      Username:
        type: "string"
      Password:
        type: "string"
    
  UserModi:
    type: "object"
    required:
    - "Modification"
    - "Option"
    - "Username"
    - "Password"
    properties:
      Username:
        type: "string"
      Password:
        type: "string"
      Option:
        type: "integer"
      Modification:
        type: "string"